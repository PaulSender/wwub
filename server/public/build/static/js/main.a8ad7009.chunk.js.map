{"version":3,"sources":["actions/types.js","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","actions/errorActions.js","actions/authActions.js","actions/itemActions.js","components/Home.jsx","components/auth/Register.jsx","components/auth/Logout.jsx","components/auth/Login.jsx","components/private/AddItem.jsx","components/NavBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","GET_ERRORS","CLEAR_ERRORS","initialState","items","loading","msg","status","id","token","localStorage","getItem","isAuthenticated","isLoading","user","combineReducers","item","state","action","type","payload","filter","error","auth","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","returnErrors","clearErrors","tokenConfig","getState","config","headers","setItemsLoading","connect","getItems","dispatch","axios","get","then","res","data","props","useState","name","setname","useEffect","map","register","email","password","body","JSON","stringify","post","catch","e","response","values","setvalues","setmsg","PropTypes","bool","object","isRequired","func","handleChange","console","log","target","value","onChange","placeholder","onClick","preventDefault","newUser","logout","location","pathname","login","AddItem","App","className","exact","path","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8ad7009.chunk.js","sourcesContent":["export const GET_ITEMS = 'GET_ITEMS'\r\nexport const ADD_ITEM = 'ADD_ITEM'\r\nexport const DELETE_ITEM = 'DELETE_ITEM'\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING'\r\nexport const USER_LOADING = \"USER_LOADING\"\r\nexport const USER_LOADED = \"USER_LOADED\"\r\nexport const AUTH_ERROR = \"AUTH_ERROR\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\"\r\nexport const GET_ERRORS = \"GET_ERRORS\"\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\"","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types'\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            }\r\n        case DELETE_ITEM: \r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item.id !== action.payload)\r\n            }\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state, \r\n                items: [action.payload, ...state.items]\r\n            }\r\n        case ITEMS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types'\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n            }\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport itemReducer from './itemReducer'\r\nimport errorReducer from './errorReducer'\r\nimport authReducer from './authReducer'\r\n\r\n\r\nexport default combineReducers({\r\n    item: itemReducer,\r\n    error: errorReducer,\r\n    auth: authReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose\r\n\r\n))\r\n\r\nexport default store","import {GET_ERRORS, CLEAR_ERRORS} from './types'\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: {msg, status, id}\r\n    }\r\n}\r\n\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    }\r\n}","import axios from 'axios'\r\nimport { returnErrors } from './errorActions'\r\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types'\r\n\r\n//Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING })\r\n    // Fetch user\r\n    axios.get('/api/auth/user', tokenConfig(getState)).then(res => {\r\n        dispatch({ type: USER_LOADED, payload: res.data })\r\n    }).catch(e => {\r\n        dispatch(returnErrors(e.response.data, e.response.status))\r\n        dispatch({ type: AUTH_ERROR })\r\n    })\r\n}\r\n\r\n// Register User\r\n\r\nexport const register = ({ name, email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": 'application/json'\r\n        }\r\n    }\r\n    // Request body\r\n    const body = JSON.stringify({ name, email, password })\r\n\r\n    axios.post('/api/users', body, config).then(res => {\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    }).catch(e => {\r\n        dispatch(returnErrors(e.response.data, e.response.status, 'REGISTER_FAIL'))\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    })\r\n}\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    const token = getState().auth.token\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers['x-auth-token'] = token\r\n    }\r\n    return config\r\n}\r\n\r\n// Login User\r\nexport const login = ({ email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": 'application/json'\r\n        }\r\n    }\r\n    // Request body\r\n    const body = JSON.stringify({ email, password })\r\n\r\n    axios.post('/api/auth', body, config).then(res => {\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    }).catch(e => {\r\n        dispatch(returnErrors(e.response.data, e.response.status, 'LOGIN_FAIL'))\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    })\r\n}\r\n\r\n// Logout User\r\nexport const logout = () => {\r\n     window.location.pathname = '/'\r\n    return {\r\n        type: LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getItems = () => dispatch => {\r\n    dispatch(setItemsLoading())\r\n    axios.get('/api/items').then(res => {\r\n        dispatch({\r\n            type: GET_ITEMS,\r\n            payload: res.data\r\n        })\r\n    })\r\n}\r\nexport const setItemsLoading = () => {\r\n    return {\r\n        type: ITEMS_LOADING\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getItems } from '../actions/itemActions'\r\nimport store from '../store'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Home(props) {\r\n    const [name, setname] = useState('')\r\n    useEffect(() => {\r\n        props.getItems()\r\n        if (props.auth.isAuthenticated) {\r\n            setname(props.auth.user.name)\r\n        }\r\n    }, [props.auth])\r\n    return (\r\n        <div>\r\n            <h3>Home</h3>\r\n            {store.getState().auth.isAuthenticated && <p>HELLO {name}</p>}\r\n            {props.item.items.map(item => {\r\n                return (\r\n                    <p>{item.name}</p>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nHome.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { getItems })(Home)","import React, { useEffect, useState, useRef } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { register } from '../../actions/authActions'\r\nimport {clearErrors} from '../../actions/errorActions'\r\n\r\n\r\nfunction Register(props) {\r\n    const [values, setvalues] = useState({ name: '', email: '', password: '' })\r\n    const [msg, setmsg] = useState(null)\r\n    const propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        register: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.error.id === 'REGISTER_FAIL') {\r\n            setmsg(props.error.msg.msg)\r\n        }\r\n    }, [props.error])\r\n\r\n    const handleChange = e => {\r\n        console.log(e);\r\n        setvalues({ ...values, [e.target.name]: e.target.value })\r\n    }\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        const { name, email, password } = values\r\n        const newUser = {\r\n            name,\r\n            email,\r\n            password\r\n        }\r\n        // clear prev errors\r\n        props.clearErrors()\r\n\r\n        // Attempt Register\r\n        props.register(newUser)\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            {msg}\r\n            <input type=\"text\" onChange={handleChange} value={values.name} name=\"name\" placeholder=\"First and Last Name...\" />\r\n            <input type=\"email\" onChange={handleChange} value={values.email} name=\"email\" placeholder=\"Email...\" />\r\n            <input type=\"password\" onChange={handleChange} value={values.password} name=\"password\" placeholder=\"Password...\" />\r\n            <button onClick={onSubmit}>Register</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error,\r\n})\r\n\r\nexport default connect(mapStateToProps, { register, clearErrors })(Register)","import React, { useState, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../actions/authActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Logout(props) {\r\n    const propTypes = {\r\n        logout: PropTypes.func.isRequired\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <button onClick={props.logout}>Logout</button>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(null, { logout })(Logout)","import React, { useEffect, useState, useRef } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../actions/authActions'\r\nimport {clearErrors} from '../../actions/errorActions'\r\n\r\n\r\nfunction Login(props) {\r\n    const [values, setvalues] = useState({ email: '', password: '' })\r\n    const [msg, setmsg] = useState(null)\r\n    const propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        login: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.error.id === 'LOGIN_FAIL') {\r\n            setmsg(props.error.msg.msg)\r\n        }\r\n    }, [props.error])\r\n\r\n    const handleChange = e => {\r\n        console.log(e);\r\n        setvalues({ ...values, [e.target.name]: e.target.value })\r\n    }\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const{email, password} = values\r\n        const user = {\r\n            email,\r\n            password\r\n        }\r\n        // clear errors\r\n        props.clearErrors()\r\n        // Attempt Login\r\n        props.login(user)\r\n    }\r\n    return (\r\n        <div>\r\n            {msg}\r\n            <input type=\"email\" onChange={handleChange} value={values.email} name=\"email\" placeholder=\"Email...\" />\r\n            <input type=\"password\" onChange={handleChange} value={values.password} name=\"password\" placeholder=\"Password...\" />\r\n            <button onClick={onSubmit}>Login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, clearErrors })(Login)","import React from 'react'\r\nimport store from '../../store'\r\n\r\n\r\nfunction AddItem() {\r\n    if (store.getState().auth.isAuthenticated) {\r\n        return (\r\n            <div>Add Item</div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>Please Sign-in</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItem","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport store from '../store'\r\nimport PropTypes from 'prop-types'\r\nimport Logout from './auth/Logout'\r\nimport Login from './auth/Login'\r\n\r\nfunction NavBar(props) {\r\n    console.log(props);\r\n    return (\r\n        <div>\r\n            <img />\r\n            <ul>\r\n                <li>Home</li>\r\n                {props.auth.isAuthenticated && <li>Profile</li>}\r\n                {props.auth.isAuthenticated && <li>Add</li>}\r\n                {props.auth.isAuthenticated && <li><Logout/></li>}\r\n                {props.auth.isAuthenticated === false && <li><Login/></li>}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavBar.propTypes = {\r\n   auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, null)(NavBar)","import './App.css';\nimport React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter, Link, Route } from 'react-router-dom'\nimport store from './store'\nimport { loadUser } from './actions/authActions'\n\n//Import Components\nimport Home from './components/Home'\nimport Register from './components/auth/Register'\nimport Logout from './components/auth/Logout'\nimport Login from './components/auth/Login'\nimport AddItem from './components/private/AddItem'\nimport NavBar from './components/NavBar'\n\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser())\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <NavBar />\n        <div className=\"App\">\n          <HashRouter>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/add\">\n              <AddItem/>\n            </Route>\n          </HashRouter>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios'\naxios.defaults.baseURL = process.env.NODE_ENV === 'production' ? 'http://3.133.13.90:8080/' : 'http://localhost:8080'\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}